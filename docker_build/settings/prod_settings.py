"""
Django settings for avat_api project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "0%8#^*nm!yg*qpi85fw5+t_3ov^a(*ppuy6$y5y*)64xb*9*3w"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        # '': {
        #     'handlers': ['console'],
        #     'level': 'INFO',
        # },
        # 'django.db.backends': {
        #     'handlers': ['console'],
        #     'level': 'DEBUG',
        # },
    },
}

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "avat_dagster.apps.AvatDagsterConfig",
    "avat.apps.AvatConfig",
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_extensions"
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "avat_api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "avat_api.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
ADMINS = (("fabiano", "fabiano.pallonetto@gmail.com"),)

MANAGERS = ADMINS

DATABASES = {
    "default": {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'a2',
        'USER': 'postgres',
        # 'HOST': 'localhost',
        # 'PORT': '54320',
        'PASSWORD': 'Avat303@',
        'HOST': 'timescale',
        'PORT': '5432',
    },
    # "sqllite": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": os.path.join(BASE_DIR, "avat.sqlite3"),
    #     # "TEST": {
    #     #     'NAME': os.path.join(BASE_DIR, "unittest_db.sqlite3"),
    #     # },
    # },
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_L10N = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_URL2 = "assets/"

UI_PATH = "../a2dj_ui/"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, UI_PATH, "frontend", "build", "static"),
    os.path.join(BASE_DIR, UI_PATH, "frontend", "build", "assets"),
    os.path.join(BASE_DIR, UI_PATH, "frontend_map", "build", "assets"),
    os.path.join(BASE_DIR, UI_PATH, "frontend_map", "build", "static"),
    os.path.join(BASE_DIR, UI_PATH, "analytics"),
]
MEDIA_URL = "/resources/"
MP_IMPORT_SCRIPTS_PATH = "mp_import_scripts/"
SP_IMPORT_SCRIPTS_PATH = "sp_import_scripts/"
SOURCE_PATH = "/avat_dagster/source/"
REACT_APP = os.path.join(BASE_DIR, UI_PATH, "frontend", "build")
MAP_APP = os.path.join(BASE_DIR, UI_PATH, "frontend_map", "build")
MAPBOX_KEY="pk.eyJ1IjoiZnBhbGxvbmV0dG8iLCJhIjoiY2szZTRrY2R4MWNuMjNicWhkMmxxNnU1eCJ9.xYtdYJEKPrYH9MZN2XB9CA"
MEDIA_ROOT = os.path.join(BASE_DIR, "resources")
XML_SCHEMA_FILE = os.path.join(BASE_DIR, "schema", "AVAT_v0.3.xsd")
XML_NEW_FILE = os.path.join(BASE_DIR, "schema", "new_project.AVAT")
COPY_XML_NEW_FILE = os.path.join(BASE_DIR, "resources")
TEST_DIR = os.path.join(BASE_DIR, "avat_test")
CORS_ORIGIN_ALLOW_ALL = True
ROWS_PER_PAGE = 1000
LIST_FIELDS = [
    "alarmTime",
    "emsTime",
    "alarmStation",
    "alarmRemoteStation",
    "alarmSource",
    "alarmEquipment",
    "alarmSeverity",
    "alarmStatus",
    "alarmArea",
    "custom1",
    "alarmVoltageLevel",
    "timeGroup",
    "Sequence",
    "analogValue",
    "analogLimit",
    "latitude",
    "longitude",
    "cproject_node_id",
]
TABLE_FIELDS = {
    "alarmTime": "Timestamp",
    "emsTime": "Ems Timestamp",
    "alarmStation": "Alarm Station",
    "alarmRemoteStation": "Remote Station",
    "alarmSource": "Source",
    "alarmEquipment": "Equipment",
    "alarmSeverity": "Category",
    "alarmStatus": "Status",
    "custom1": "Custom1",
    "alarmVoltageLevel": "Voltage Level",
    "Sequence": "Priority",
    "alarmArea": "Area",
    "analogValue": "Analog Value",
    "analogLimit": "Analog Limit",
    "latitude": "Latitude",
    "longitude": "Longitude",
}
LIST_NODES = [
    "cProjectNodeMasterList",
    "cProjectNodeTextDoc",
    "cProjectNodeSystemEvent",
    "cProjectNodeLocalEvent",
]
AVAT_VERSION = "3.5 pre-beta"
NOTEBOOK_ARGUMENTS = [
    '--ip', '0.0.0.0',
    '--NotebookApp.token=', '',
    '--allow-root',
    '--no-browser',
    '--NotebookApp.iopub_data_rate_limit=10000000000',
]
